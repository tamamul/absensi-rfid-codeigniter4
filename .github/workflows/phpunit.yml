name: PHPUnit + Build ZIP

on:
  pull_request:
    branches: 
      - develop

jobs:
  main:
    name: Build, Test & Package
    strategy:
      matrix:
        php-versions: ['7.2', '7.3', '7.4']

    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer, pecl, phpunit
          extensions: intl, json, mbstring, mysqlnd, xdebug, xml, sqlite3
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_ENV

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ env.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --no-suggest --no-interaction --prefer-dist --optimize-autoloader

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --coverage-text

      # --- Package for deployment ---
      - name: Prepare deploy folder
        run: |
          mkdir deploy
          cp -r app bootstrap config database public resources routes vendor artisan deploy/
          # copy DB dummy (misal database/dummy.sql)
          cp database/dummy.sql deploy/database.sql
          # optional: copy .env.example -> .env
          cp .env.example deploy/.env

      - name: Create ZIP
        run: |
          cd deploy
          zip -r ../project-deploy.zip ./*
          cd ..

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v3
        with:
          name: project-deploy
          path: project-deploy.zip
